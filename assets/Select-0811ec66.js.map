{"version":3,"file":"Select-0811ec66.js","sources":["../../src/common/components/Button.tsx","../../src/common/components/Modal.tsx","../../src/common/components/Select.tsx"],"sourcesContent":["import React, { ComponentProps } from 'react'\n\ninterface Props extends ComponentProps<'button'> {\n  variant?: 'fill' | 'outline' | 'text'\n  color?: string\n}\n\nconst Button: React.FC<Props> = ({ variant = 'fill', color, className, ...props }) => {\n  return (\n    <button\n      className={`rounded-md border border-transparent px-1.5 py-1 disabled:hover:no-underline  ${\n        variant === 'fill'\n          ? 'bg-blue-500 text-white hover:underline disabled:bg-slate-500 '\n          : variant === 'outline'\n          ? 'border-slate-800 bg-white hover:underline disabled:text-slate-600'\n          : 'hover:bg-slate-100'\n      } ${className}`}\n      style={\n        variant === 'fill'\n          ? { backgroundColor: color }\n          : variant === 'outline'\n          ? { borderColor: color }\n          : { color }\n      }\n      {...props}\n    />\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Button from './Button'\n\ninterface Props {\n  isOpen: boolean\n  onClose?: () => void\n  children: React.ReactNode\n}\n\nconst Modal: React.FC<Props> = ({ isOpen, onClose, children }) => {\n  return isOpen\n    ? ReactDOM.createPortal(\n        <>\n          <div\n            className=\"fixed left-0 top-0 z-50 h-screen w-screen bg-black opacity-50\"\n            onClick={onClose}\n            aria-hidden\n          />\n          <div\n            className=\"fixed left-2/4 top-2/4 z-50 -translate-x-2/4 -translate-y-2/4\"\n            aria-modal\n            tabIndex={-1}\n            role=\"dialog\"\n          >\n            <div className=\"flex h-60 max-w-lg flex-col justify-center gap-12 rounded-lg bg-white p-4 text-xl leading-6 text-black\">\n              {onClose && (\n                <Button\n                  variant=\"text\"\n                  title=\"Close\"\n                  onClick={onClose}\n                  className=\"absolute right-2 top-2\"\n                >\n                  &#10005;\n                </Button>\n              )}\n              {children}\n            </div>\n          </div>\n        </>,\n        document.body,\n      )\n    : null\n}\n\nexport default Modal\n","import React, { ComponentProps } from 'react'\n\ntype OptionValue = React.OptionHTMLAttributes<HTMLOptionElement>['value']\n\ninterface Props<T extends OptionValue> extends Omit<ComponentProps<'select'>, 'onChange'> {\n  label?: React.ReactNode\n  labelDirection?: 'row' | 'column'\n  onChange?: React.ChangeEventHandler<HTMLSelectElement & { value: T }>\n  options: { value: T; label: string }[]\n  variant?: 'fill' | 'outline' | 'text'\n  color?: string\n}\n\nconst Select = <T extends OptionValue>({\n  label,\n  labelDirection = 'row',\n  onChange,\n  options,\n  className,\n  variant = 'outline',\n  color,\n  ...props\n}: Props<T>) => {\n  return (\n    <label\n      className={`flex ${\n        labelDirection === 'row' ? 'items-baseline' : 'flex-col items-start'\n      } gap-1`}\n    >\n      {label}\n      <select\n        className={`w-full rounded-md border border-transparent bg-transparent py-1 pl-1.5 pr-8 disabled:hover:no-underline  ${\n          variant === 'fill'\n            ? `bg-blue-500 text-white hover:underline disabled:bg-slate-500`\n            : variant === 'outline'\n            ? `border-slate-800 bg-white hover:underline disabled:text-slate-600`\n            : 'hover:bg-slate-100'\n        } ${className}`}\n        style={\n          variant === 'fill'\n            ? { backgroundColor: color }\n            : variant === 'outline'\n            ? { borderColor: color }\n            : { color }\n        }\n        onChange={\n          onChange\n            ? e => onChange(e as React.ChangeEvent<HTMLSelectElement & { value: T }>)\n            : undefined\n        }\n        {...props}\n      >\n        {options.map(({ value, label }) => (\n          <option key={label} value={value} label={label} />\n        ))}\n      </select>\n    </label>\n  )\n}\n\nexport default Select\n"],"names":["Button","variant","color","className","props","jsx","Modal","isOpen","onClose","children","ReactDOM","jsxs","Fragment","Select","label","labelDirection","onChange","options","e","value","label2"],"mappings":"sFAOA,MAAAA,EAAA,CAAA,CAAA,QAAAC,EAAA,OAAA,MAAAC,EAAA,UAAAC,EAAA,GAAAC,KACEC,EAAA,IACE,SAAC,CAAA,UAAA,iFAAAJ,IAAA,OAAA,gEAAAA,IAAA,UAAA,oEAAA,oBAAA,IAAAE,CAAA,GAOc,MAAAF,IAAA,OAAA,CAAA,gBAAAC,CAAA,EAAAD,IAAA,UAAA,CAAA,YAAAC,CAAA,EAAA,CAAA,MAAAA,CAAA,EAMC,GAAAE,CAEV,CAAA,yVCdV,MAAAE,EAAA,CAAA,CAAA,OAAAC,EAAA,QAAAC,EAAA,SAAAC,CAAA,IACEF,EAAAG,EAAA,aACaC,OAAAC,EAAAA,SAAA,CAAA,SAAA,CAELP,EAAA,IAAA,MAAC,CAAA,UAAA,gEACW,QAAAG,EACD,cAAA,EACE,CAAA,EACbH,EAAA,IACA,MAAC,CAAA,UAAA,gEACW,aAAA,GACA,SAAA,GACA,KAAA,SACL,SAAAM,EAAA,KAAA,MAAA,CAAA,UAAA,yGAAA,SAAA,CAGFH,GAAAH,EAAA,IACCL,EAAC,CAAA,QAAA,OACS,MAAA,QACF,QAAAQ,EACG,UAAA,yBACC,SAAA,GACX,CAAA,EAEDC,CAED,EAAA,CACH,CAAA,CACF,EAAA,EACF,SAAA,IACS,EAAA,6RC3BjB,MAAAI,EAAA,CAAA,CAAuC,MAAAC,EACrC,eAAAC,EAAA,MACiB,SAAAC,EACjB,QAAAC,EACA,UAAAd,EACA,QAAAF,EAAA,UACU,MAAAC,EACV,GAAAE,CAEF,IACEO,EAAA,KACE,QAAC,CAAA,UAAA,QAAAI,IAAA,MAAA,iBAAA,sBAAA,SAGC,SAAA,CAECD,EAAAT,EAAA,IACD,SAAC,CAAA,UAAA,4GAAAJ,IAAA,OAAA,+DAAAA,IAAA,UAAA,oEAAA,oBAAA,IAAAE,CAAA,GAOc,MAAAF,IAAA,OAAA,CAAA,gBAAAC,CAAA,EAAAD,IAAA,UAAA,CAAA,YAAAC,CAAA,EAAA,CAAA,MAAAA,CAAA,EAMC,SAAAc,EAAAE,GAAAF,EAAAE,CAAA,EAAA,OAKR,GAAAd,EAEF,SAAAa,EAAA,IAAA,CAAA,CAAA,MAAAE,EAAA,MAAAC,CAAA,IAAAf,EAAAA,IAAA,SAAA,CAAA,MAAAc,EAAA,MAAAC,CAAA,EAAAA,CAAA,CAAA,CAIH,CAAA,CACH,CAAA,CAAA"}